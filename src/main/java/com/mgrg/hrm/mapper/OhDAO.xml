<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mgrg.hrm.officehr.OhDAO">
	<select id="select_officehr"
		resultType="com.mgrg.hrm.officehr.OhDTO" flushCache="true">
		<![CDATA[
			SELECT e.EMP_UID "uid", e.EMP_NAME name, category.W_START "start", category.W_END "end", d.DEP_NAME posRank, p.P_NAME dept, category.stat "status", category.w_uid 
			FROM DEPARTMENT d , POSITIONRANK p , EMPLOYEES e LEFT OUTER JOIN 
				(SELECT  
					h.*,
					CASE
						WHEN h.startTime IS NULL THEN '미출근'
						WHEN h.endTime < 1800 THEN '조퇴'
						WHEN h.startTime <= 900 AND h.endTime >= 1800 THEN '퇴근'
						WHEN h.endtime IS NULL AND h.startTime <= 900 THEN '출근'
						WHEN h.startTime > 900 THEN '지각'
						ELSE '결근'
						END AS stat
				FROM (SELECT e.emp_uid , oh.W_UID , oh.W_START , oh.W_END , TO_NUMBER(TO_CHAR(oh.W_START , 'hh24mi')) AS startTime, 
							 to_number(TO_CHAR(oh.W_END , 'hh24mi')) AS endTime
			FROM (SELECT * FROM EMPLOYEES e WHERE e.EMP_UID NOT IN (10, 11))e LEFT OUTER JOIN OFFICE_HOUR oh ON e.emp_uid = oh.EMP_UID AND 
			to_char(oh.W_START, 'yyyy-mm-dd') =  TO_CHAR(sysdate, 'yyyy-mm-dd')
			ORDER BY e.EMP_UID) h) category ON e.EMP_UID = category.EMP_UID
						WHERE e.DEP_UID = d.dep_uid AND e.P_UID = p.P_UID AND e.P_UID NOT IN (6, 7)
			ORDER BY e.EMP_NAME
		]]>
	</select>

	<update id="updateHour" flushCache="true">
		UPDATE OFFICE_HOUR
		SET
		<choose>
			<when test="w_start == null">
				w_start = NULL,
			</when>
			<otherwise>
				w_start = #{w_start},
			</otherwise>
		</choose>

		<choose>
			<when test="w_end == null">
				w_end = NULL
			</when>
			<otherwise>
				w_end = #{w_end}
			</otherwise>
		</choose>
		WHERE emp_uid = #{emp_uid} AND w_uid = #{w_uid}
	</update>

	<select id="select_By_Search"
		resultType="com.mgrg.hrm.officehr.OhDTO" flushCache="true">
			<![CDATA[
				SELECT e.EMP_UID "uid", e.EMP_NAME name, category.W_START "start", category.W_END "end", d.DEP_NAME posRank, p.P_NAME dept, category.stat "status", category.w_uid 
			FROM DEPARTMENT d , POSITIONRANK p , EMPLOYEES e LEFT OUTER JOIN 
				(SELECT  
					h.*,
					CASE
						WHEN h.startTime IS NULL THEN '미출근'
						WHEN h.endTime < 1800 THEN '조퇴'
						WHEN h.startTime <= 900 AND h.endTime >= 1800 THEN '퇴근'
						WHEN h.endtime IS NULL AND h.startTime <= 900 THEN '출근'
						WHEN h.startTime > 900 THEN '지각'
						ELSE '결근'
						END AS stat
				FROM (SELECT e.emp_uid , oh.W_UID , oh.W_START , oh.W_END , TO_NUMBER(TO_CHAR(oh.W_START , 'hh24mi')) AS startTime, 
							 to_number(TO_CHAR(oh.W_END , 'hh24mi')) AS endTime
			FROM (SELECT * FROM EMPLOYEES e WHERE e.EMP_UID NOT IN (10, 11))e LEFT OUTER JOIN OFFICE_HOUR oh ON e.emp_uid = oh.EMP_UID
			ORDER BY e.EMP_UID) h) category ON e.EMP_UID = category.EMP_UID
						WHERE e.DEP_UID = d.dep_uid AND e.P_UID = p.P_UID AND e.P_UID NOT IN (6, 7)
			]]>
		<choose>
			<when test="option == 1"> <!-- 직원 이름 (emp_name -->
				AND EMP_NAME = #{input} AND category.W_START BETWEEN #{startDate}
				AND #{endDate}
			</when>
			<when test="option == 2"> <!-- 직원 이름 (emp_name -->
				AND DEP_NAME = #{input} AND category.W_START BETWEEN #{startDate}
				AND #{endDate}
			</when>
			<when test="option == 3"> <!-- 직원 이름 (emp_name -->
				AND P_NAME = #{input} AND category.W_START BETWEEN #{startDate} AND
				#{endDate}
			</when>
			<when test="option == 1 and start == null and end == null">
				AND
			</when>
		</choose>
		ORDER BY e.EMP_NAME
	</select>
	
</mapper>