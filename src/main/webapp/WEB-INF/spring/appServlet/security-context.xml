<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied"
		class="com.mgrg.hrm.login.security.CustomAccessDeniedHandler" />

	<bean id="customLoginSuccess"
		class="com.mgrg.hrm.login.security.CustomLoginSuccessHandler" />

<!-- 	<bean id="customPasswordEncoder" class="com.mgrg.hrm.login.security.CustomNoOpPasswordEncoder"/> -->

	

	<!-- 컨테이너의 HTTP security 요소 -->
	<security:http>

		<!-- 특정 url pattern 요청이 들어올때 인터셉터를 이용해 접근 제한 설정 -->
		<security:intercept-url pattern="/sample/all"
			access="permitAll" />
		<security:intercept-url
			pattern="/login/mainLoginPage" access="permitAll" />

		<!-- /sample/member URI 요청은 ROLE_MEMBER 라는 권한이 있는 사용자만이 접근 가능 -->
		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url
			pattern="/login/adminMainPage" access="hasRole('ROLE_ADMIN')" />

		<security:form-login
			login-page="/login/mainLoginPage"
			authentication-success-handler-ref="customLoginSuccess" />

		<security:access-denied-handler
			ref="customAccessDenied" />

		<security:logout logout-url="/customLogout"
			invalidate-session="true" />

	</security:http>

	<!-- AuthenticationManager 빈 생성 -->
	<security:authentication-manager>
		<security:authentication-provider>   <!-- provider는 당연히 여러개 만들 수 있다. -->
			<security:user-service>

				<!-- inMemory 방식 -->
				<security:user name="member" password="{noop}member"
					authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}admin"
					authorities="ROLE_ADMIN, 
				ROLE_MEMBER" />
				<security:user name="admin@admin.com"
					password="{noop}admin" authorities="ROLE_ADMIN, ROLE_MEMBER" />
			</security:user-service>


		</security:authentication-provider>
	</security:authentication-manager>





</beans>
